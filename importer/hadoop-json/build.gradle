defaultTasks 'build'

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'project-reports'
apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: "groovy"

group = 'org.jumbodb.importer'
archivesBaseName = 'hadoop-json'

repositories {
    mavenCentral()
}


configurations {
    // this scope extracts the files and copies it into he same jar file, because ou can just use one jar file in emr
    bundle {
        transitive = false
    }
}
sourceSets {
    main {
        resources {
            srcDir 'src/main/resources'
            srcDir 'src/main/java'
        }
    }
    test {
        resources {
            srcDir 'src/test/resources'
            srcDir 'src/test/java'
            srcDir 'src/test/groovy'
        }
    }
}

applicationDistribution.from(zipTree('lib/hadoop-common-2.2.0-bin-master.zip')) {
    into "winutils/"
}

startScripts {
    doLast {
        def paths = """\
set PATH=%PATH%;%~dp0\\..\\winutils\\hadoop-common-2.2.0-bin-master\\bin\r\n
set HADOOP_HOME=%~dp0\\..\\winutils\\hadoop-common-2.2.0-bin-master\r\n"""
        windowsScript.text = paths + windowsScript.text
    }
}

dependencies {
    compile project(':connectors:jumbodb-hadoop-connector')

    bundle project(':connectors:jumbodb-hadoop-connector')
    bundle project(':connectors:jumbodb-java-connector')
    bundle project(':commons:query')
    bundle project(':commons:geo')
    bundle project(':commons:data')
    bundle "org.xerial.snappy:snappy-java:$snappyVersion"
    bundle 'commons-io:commons-io:2.3'
    testCompile "org.codehaus.groovy:groovy-all:1.8.6"
    testCompile "org.spockframework:spock-core:0.6-groovy-1.8"
}


mainClassName = "org.jumbodb.importer.hadoop.json.JsonImporterJob"
applicationDefaultJvmArgs = ["-Xmx2G"]
applicationName = "jumboimport"

jar {
    from configurations.bundle.collect {
        it.isDirectory() ? it : zipTree(it)
    }
    manifest {
        attributes("Main-Class": "org.jumbodb.importer.hadoop.json.JsonImporterJob")
    }
}

eclipse {
    classpath {
        downloadSources = true
        downloadJavadoc = false
    }
}


idea {
    module {
        downloadSources = true
    }
}
